// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UTCAPPCMS.DAL.DBContext;

namespace UTCAPPCMS.DAL.Migrations
{
    [DbContext(typeof(UTCAPPCMS_DBContext))]
    [Migration("20210202111829_init_AreaFkTable")]
    partial class init_AreaFkTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.AdminUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("createddate")
                        .HasColumnType("datetime2")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnName("fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnName("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnName("isEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ParkingFkId")
                        .HasColumnName("Parking_FK_ID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrivilageGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("UserTypeFkId")
                        .HasColumnName("UserType_FK_Id")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParkingFkId");

                    b.HasIndex("UserTypeFkId");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.AuditTrialid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .HasColumnName("actionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnName("controllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnName("createdBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnName("remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditTrialid");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CivilID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Derpartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("NationalityFkID")
                        .HasColumnType("int");

                    b.Property<int?>("ParkingFkID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StafNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubscriptionDurationFkID")
                        .HasColumnType("int");

                    b.Property<string>("WorkPosition")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NationalityFkID");

                    b.HasIndex("ParkingFkID");

                    b.HasIndex("SubscriptionDurationFkID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.CustomerDays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerSubscriptionFkID")
                        .HasColumnType("int");

                    b.Property<int?>("DayFkID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerSubscriptionFkID");

                    b.HasIndex("DayFkID");

                    b.ToTable("CustomerDays");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.CustomerSubscriptionLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerSubscriptionFkID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ParkingLocationsFkID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerSubscriptionFkID");

                    b.HasIndex("ParkingLocationsFkID");

                    b.ToTable("CustomerSubscriptionLocation");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.CustomerSubscriptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerFkID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("FromHours")
                        .HasColumnType("time");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTypeFkID")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("SubscriptionDurationFkID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("ToHours")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CustomerFkID");

                    b.HasIndex("PaymentTypeFkID");

                    b.HasIndex("SubscriptionDurationFkID");

                    b.ToTable("CustomerSubscriptions");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.CustomerVehicles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerFkID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVip")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("PlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VechicleType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerFkID");

                    b.ToTable("CustomerVehicles");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.Day", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SortNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Day");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.FormPages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("FormKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormPages");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.GroupPrivilage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Add")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool?>("Delete")
                        .HasColumnType("bit");

                    b.Property<bool?>("Edit")
                        .HasColumnType("bit");

                    b.Property<int?>("GroupIdFk")
                        .HasColumnName("GroupID_FK")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("PageIdFk")
                        .HasColumnName("PageID_FK")
                        .HasColumnType("int");

                    b.Property<bool?>("Print")
                        .HasColumnType("bit");

                    b.Property<bool?>("Search")
                        .HasColumnType("bit");

                    b.Property<bool?>("View")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GroupIdFk");

                    b.HasIndex("PageIdFk");

                    b.ToTable("GroupPrivilage");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SortNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Nationality");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.Parking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyFkId")
                        .HasColumnName("Company_FK_ID")
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnName("CreatedUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invoicelogo")
                        .HasColumnName("invoicelogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Logo")
                        .HasColumnName("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnName("ModifiedUserID")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parking");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.ParkingImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnName("isEnable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMain")
                        .HasColumnName("isMain")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnName("orderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParkingFkId")
                        .HasColumnName("Parking_FK_ID")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnName("path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParkingFkId");

                    b.ToTable("ParkingImages");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.ParkingLocations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Allowedtimeperminute")
                        .HasColumnName("allowedtimeperminute")
                        .HasColumnType("int");

                    b.Property<int?>("AreaFkId")
                        .HasColumnName("Area_FK_ID")
                        .HasColumnType("int");

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CarCapacity")
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnName("CreatedUserID")
                        .HasColumnType("int");

                    b.Property<int?>("FloorsNo")
                        .HasColumnType("int");

                    b.Property<string>("GpsLat")
                        .HasColumnName("Gps_Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GpsLong")
                        .HasColumnName("GpsLong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnName("ModifiedUserID")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("OpenFromTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("OpenToTime")
                        .HasColumnType("time");

                    b.Property<int?>("ParkingFkId")
                        .HasColumnName("Parking_FK_ID")
                        .HasColumnType("int");

                    b.Property<string>("Qrcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteId")
                        .HasColumnName("SiteID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaFkId");

                    b.HasIndex("ParkingFkId");

                    b.ToTable("ParkingLocations");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.PaymentSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnName("isEnable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublic")
                        .HasColumnName("isPublic")
                        .HasColumnType("bit");

                    b.Property<string>("IsoCode")
                        .HasColumnName("isoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnName("nameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnName("nameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentSource");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.PromoCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoOfUse")
                        .HasColumnType("int");

                    b.Property<int?>("ParkingLocationsFkID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParkingLocationsFkID");

                    b.ToTable("PromoCode");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.Siteline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnName("CreatedUserID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LineDpuid")
                        .HasColumnName("LineDPUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineDpuname")
                        .HasColumnName("LineDPUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineId")
                        .HasColumnName("LineID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<string>("LineType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnName("ModifiedUserID")
                        .HasColumnType("int");

                    b.Property<int?>("ParkingLocationFkId")
                        .HasColumnName("ParkingLocation_FK_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParkingLocationFkId");

                    b.ToTable("Siteline");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParkingFkID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParkingFkID");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.SubscriptionDurations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AllDays")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DaysCount")
                        .HasColumnType("int");

                    b.Property<int?>("HoursCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMullti")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("PriceMulti")
                        .HasColumnType("float");

                    b.Property<int?>("SubscriptionFkId")
                        .HasColumnType("int");

                    b.Property<int?>("VechicleCount")
                        .HasColumnType("int");

                    b.Property<int?>("durationInDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionFkId");

                    b.ToTable("SubscriptionDurations");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.TableCollectionTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ClosedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("DurationText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InTransactionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCollected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("OutTransactionId")
                        .HasColumnType("int");

                    b.Property<double?>("Paid")
                        .HasColumnType("float");

                    b.Property<int?>("PaymentSourceId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Remaining")
                        .HasColumnType("float");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime");

                    b.Property<double?>("TotalMount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PaymentSourceId");

                    b.ToTable("Table_CollectionTransaction");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.TableTariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<double?>("HourPrice")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnName("isEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameEn")
                        .HasColumnName("nameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrkingLocationFkId")
                        .HasColumnName("PrkingLocation_FK_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrkingLocationFkId");

                    b.ToTable("Table_Tariff");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.TableTransactionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlarmStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlarmStatusTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Confidence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<long?>("Dpuid")
                        .HasColumnName("DPUId")
                        .HasColumnType("bigint");

                    b.Property<string>("Dpuname")
                        .HasColumnName("DPUName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSynch")
                        .HasColumnType("bit");

                    b.Property<string>("LaneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LaneNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ParkingLocationId")
                        .HasColumnType("int");

                    b.Property<int?>("ParkingLocationsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaymentExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PlateCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumberOnly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatePrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReciveDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("RecordVersionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SiteId")
                        .HasColumnType("bigint");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusFkId")
                        .HasColumnName("Status_FK_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SynchDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("TransactionId")
                        .HasColumnName("TransactionID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TransactionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("VehicleBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VehicleClassification")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleColor")
                        .HasColumnType("int");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParkingLocationsId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("StatusFkId");

                    b.ToTable("Table_TransactionDetail");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.TransactionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnName("isEnable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublic")
                        .HasColumnName("isPublic")
                        .HasColumnType("bit");

                    b.Property<string>("IsoCode")
                        .HasColumnName("isoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnName("nameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnName("nameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransactionStatus");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.UserPrivilage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Add")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool?>("Delete")
                        .HasColumnType("bit");

                    b.Property<bool?>("Edit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("PageID_FK")
                        .HasColumnName("PageID_FK")
                        .HasColumnType("int");

                    b.Property<bool?>("Print")
                        .HasColumnType("bit");

                    b.Property<bool?>("Search")
                        .HasColumnType("bit");

                    b.Property<int?>("UserID_FK")
                        .HasColumnName("UserID_FK")
                        .HasColumnType("int");

                    b.Property<bool?>("View")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PageID_FK");

                    b.HasIndex("UserID_FK");

                    b.ToTable("UserPrivilage");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnName("isEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnName("nameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnName("nameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.AdminUsers", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.Parking", "ParkingFk")
                        .WithMany("AdminUsers")
                        .HasForeignKey("ParkingFkId")
                        .HasConstraintName("FK_AdminUsers_Parking")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UTCAPPCMS.DAL.Models.UserType", "UserTypeFk")
                        .WithMany("AdminUsers")
                        .HasForeignKey("UserTypeFkId")
                        .HasConstraintName("FK_AdminUsers_UserType")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.Customer", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.Nationality", "NationalityFk")
                        .WithMany()
                        .HasForeignKey("NationalityFkID");

                    b.HasOne("UTCAPPCMS.DAL.Models.Parking", "ParkingFk")
                        .WithMany()
                        .HasForeignKey("ParkingFkID");

                    b.HasOne("UTCAPPCMS.DAL.Models.SubscriptionDurations", "SubscriptionDurationFk")
                        .WithMany()
                        .HasForeignKey("SubscriptionDurationFkID");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.CustomerDays", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.CustomerSubscriptions", "CustomerSubscriptionFk")
                        .WithMany()
                        .HasForeignKey("CustomerSubscriptionFkID");

                    b.HasOne("UTCAPPCMS.DAL.Models.Day", "DayFk")
                        .WithMany()
                        .HasForeignKey("DayFkID");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.CustomerSubscriptionLocation", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.CustomerSubscriptions", "CustomerSubscriptionFk")
                        .WithMany()
                        .HasForeignKey("CustomerSubscriptionFkID");

                    b.HasOne("UTCAPPCMS.DAL.Models.ParkingLocations", "ParkingLocationsFk")
                        .WithMany()
                        .HasForeignKey("ParkingLocationsFkID");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.CustomerSubscriptions", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.Customer", "CustomerFk")
                        .WithMany()
                        .HasForeignKey("CustomerFkID");

                    b.HasOne("UTCAPPCMS.DAL.Models.PaymentType", "PaymentTypeFk")
                        .WithMany()
                        .HasForeignKey("PaymentTypeFkID");

                    b.HasOne("UTCAPPCMS.DAL.Models.SubscriptionDurations", "SubscriptionDurationFk")
                        .WithMany()
                        .HasForeignKey("SubscriptionDurationFkID");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.CustomerVehicles", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.Customer", "CustomerFk")
                        .WithMany()
                        .HasForeignKey("CustomerFkID");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.GroupPrivilage", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.UserGroup", "GroupIdFkNavigation")
                        .WithMany("GroupPrivilage")
                        .HasForeignKey("GroupIdFk")
                        .HasConstraintName("FK_GroupPrivilage_UserGroup")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UTCAPPCMS.DAL.Models.FormPages", "PageIdFkNavigation")
                        .WithMany("GroupPrivilage")
                        .HasForeignKey("PageIdFk")
                        .HasConstraintName("FK_GroupPrivilage_FormPages")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.ParkingImages", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.Parking", "ParkingFk")
                        .WithMany("ParkingImages")
                        .HasForeignKey("ParkingFkId")
                        .HasConstraintName("FK_ParkingImages_Parking")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.ParkingLocations", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.Area", "AreaFk")
                        .WithMany("ParkingLocations")
                        .HasForeignKey("AreaFkId")
                        .HasConstraintName("FK_ParkingLocations_Area")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UTCAPPCMS.DAL.Models.Parking", "ParkingFk")
                        .WithMany("ParkingLocations")
                        .HasForeignKey("ParkingFkId")
                        .HasConstraintName("FK_ParkingLocations_Parking")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.PromoCode", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.ParkingLocations", "ParkingLocationsFk")
                        .WithMany()
                        .HasForeignKey("ParkingLocationsFkID");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.Siteline", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.ParkingLocations", "ParkingLocationFk")
                        .WithMany("Siteline")
                        .HasForeignKey("ParkingLocationFkId")
                        .HasConstraintName("FK_Siteline_ParkingLocations")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.Subscription", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.Parking", "ParkingFk")
                        .WithMany()
                        .HasForeignKey("ParkingFkID");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.SubscriptionDurations", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.Subscription", "SubscriptionFk")
                        .WithMany()
                        .HasForeignKey("SubscriptionFkId");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.TableCollectionTransaction", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.PaymentSource", null)
                        .WithMany("TableCollectionTransaction")
                        .HasForeignKey("PaymentSourceId");
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.TableTariff", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.ParkingLocations", "PrkingLocationFk")
                        .WithMany("TableTariff")
                        .HasForeignKey("PrkingLocationFkId")
                        .HasConstraintName("FK_Table_Tariff_ParkingLocations")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.TableTransactionDetail", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.ParkingLocations", "ParkingLocations")
                        .WithMany()
                        .HasForeignKey("ParkingLocationsId");

                    b.HasOne("UTCAPPCMS.DAL.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId");

                    b.HasOne("UTCAPPCMS.DAL.Models.TransactionStatus", "StatusFk")
                        .WithMany("TableTransactionDetail")
                        .HasForeignKey("StatusFkId")
                        .HasConstraintName("FK_Table_TransactionDetail_TransactionStatus")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UTCAPPCMS.DAL.Models.UserPrivilage", b =>
                {
                    b.HasOne("UTCAPPCMS.DAL.Models.FormPages", "PageIdFkNavigation")
                        .WithMany("UserPrivilage")
                        .HasForeignKey("PageID_FK")
                        .HasConstraintName("FK_UserPrivilage_FormPages")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UTCAPPCMS.DAL.Models.AdminUsers", "UserIdFkNavigation")
                        .WithMany("UserPrivilage")
                        .HasForeignKey("UserID_FK")
                        .HasConstraintName("FK_UserPrivilage_AdminUsers")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
